__author__ = 'IBM'

from app import app
from flask import render_template, request
from flask import jsonify
import time
from threading import Thread
from metasploit.exploits import initialise
from qradar_api import get_asset_json
from logging import *
import json
global scan
global quick
global text

@app.route('/')
def index():
    return render_template("index.html")

@app.route('/scanFinished', methods=['GET', 'POST'])
def scanFinished():
    global addresses
    if request.method == "GET":
        return scanFinished

@app.route('/getAssetDetails', methods=['GET'])
def getAassetDetails():
    get_asset_json()
    f = open('./app/assets.json', 'r')
    assets = (json.parse(f.read()))
    return jsonify(assets=assets)

@app.route('/api', methods=['GET', 'POST'])
def api():
    scan = False
    quick = False
    text = ""
    if request.method == 'POST':
        scan = request.args['scan']
        quick = request.args['quick']
        InfoLog("Scan set to " + scan + " and quick scan is set to " + quick)
        if quick == "false":
            text = ""
        else:
            text = ""
        thread = Thread(target = runMetasploit, args = ())
        InfoLog("Starting Metasploit thread.")
        thread.start()
        return "success"
    if request.method == "GET":
        return jsonify(
            scan=scan, 
            quick=quick,
            text=text
        )
    return request.args.get("scan")
@app.route('/logs', methods=['GET', 'POST'])
def logs():
    if request.method == "GET":
        if request.args["type"] == "general":
            f = open("./app/logs/logging.log", "r")
        else:
            f = open("./app/logs/metasploit.log", "r")
        return jsonify(
            text=f.read()
        )

def runMetasploit():
    initialise()